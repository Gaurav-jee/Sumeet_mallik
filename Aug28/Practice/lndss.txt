package dp;

public class lndss {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
//		int[] arr = {2, 5, 5, 5, 7, 7, 7, 11, 11, 15};
//		System.out.println(binarySearch(arr, 0, arr.length - 1, 16));
		int[] arr = {2, 7, 3, 1, 3, 5, 7, 3, 8, 4, 5, 5, 5};
		int[] tails = new int[arr.length];
		int len = 1;
		
		tails[len - 1] = arr[0];
		for(int i = 1; i < arr.length; i++) {
			if(arr[i] >= tails[len - 1]) {
				len++;
				tails[len - 1] = arr[i];
			} else {
				int idx = binarySearch(tails, 0, len - 1, arr[i]);
				
				if(idx < 0) {
					idx = -idx;
					idx = idx - 1;
				} else {
					idx += 1;
				}
				
				tails[idx] = arr[i];
			}
		}
		
		System.out.println(len);
	}
	
	static int binarySearch(int[] arr, int lo, int hi, int val) {
		int ans = -1;
		int ans2 = -1;
		while(lo <= hi) {
			int mid = (lo + hi) / 2;
			if(val == arr[mid]) {
				ans = mid;
				lo = mid + 1;
			} else if(val < arr[mid]) {
				hi = mid - 1;
				ans2 = -(hi + 2);
			} else {
				lo = mid + 1;
				ans2 = -(lo + 1);
			}
		}
		
		if(ans == -1) {
			ans = ans2;
		} 
		
		return ans;
	}

}
